{"version":3,"file":"static/js/891.bb549803.chunk.js","mappings":"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","sources":["components/services/api.js","webpack://react-homework-template/./src/components/MovieSearch/MovieSearchForm/MovieSearchForm.module.css?ad29","components/MovieSearch/MovieSearchForm/MovieSearchForm.jsx","webpack://react-homework-template/./src/components/MovieSearch/MovieSearchList/MovieSearchList.module.css?683c","components/MovieSearch/MovieSearchList/MovieSearchList.jsx","components/MovieSearch/MovieSearch.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n\n  params: {\n    api_key: '5bbf892bcd99762773ec3ce2eced7cd4',\n  },\n});\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get('/search/movie?', {\n    params: {\n      query,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getAllMovies = async (page = 1) => {\n  const { data } = await instance.get('/trending/all/day?', {\n    params: {\n      page,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}?`);\n\n  return data;\n};\n\nexport const getCasts = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/credits?`);\n  return data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}//reviews?`);\n  return data.results;\n};\n\n// api key: 5bbf892bcd99762773ec3ce2eced7cd4\n\n//https://api.themoviedb.org/3/movie/550?api_key=5bbf892bcd99762773ec3ce2eced7cd4\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MovieSearchForm_form__gjFvT\",\"input\":\"MovieSearchForm_input__3nnbh\",\"button\":\"MovieSearchForm_button__twkeh\"};","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nimport css from './MovieSearchForm.module.css';\n\nconst MovieSearchForm = ({ onSubmit }) => {\n  const [search, setSearch] = useState('');\n\n  const handleChange = event => setSearch(event.target.value);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(search);\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input\n        name=\"search\"\n        value={search}\n        required\n        placeholder=\"Search movie\"\n        className={css.input}\n        onChange={handleChange}\n      />\n      <button type=\"submit\" className={css.button}>\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default MovieSearchForm;\n\nMovieSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieSearchList_list__+ojvH\",\"item\":\"MovieSearchList_item__zI4VY\",\"link\":\"MovieSearchList_link__Qi2-u\"};","import PropTypes from 'prop-types';\n\nimport { Link, useLocation } from 'react-router-dom';\n\nimport css from './MovieSearchList.module.css';\n\nconst MovieSearchList = ({ movies }) => {\n  const location = useLocation();\n\n  const elements = movies.map(({ title, id }) => (\n    <li key={id} className={css.item}>\n      <Link\n        className={css.link}\n        state={{ from: location }}\n        to={`/movies/${id}`}\n      >\n        {title}\n      </Link>\n    </li>\n  ));\n\n  return <ul className={css.list}>{elements}</ul>;\n};\n\nexport default MovieSearchList;\n\nMovieSearchList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { searchMovies } from 'components/services/api';\nimport MovieSearchForm from './MovieSearchForm/MovieSearchForm';\nimport MovieSearchList from './MovieSearchList/MovieSearchList';\n\nimport Loader from '../Loader/Loader';\n\nconst MovieSearch = () => {\n  const [movies, setMovies] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      if (!search) {\n        return;\n      }\n      try {\n        setLoading(true);\n        const results = await searchMovies(search);\n        setMovies(results);\n      } catch ({ response }) {\n        setError(response.data.message);\n        console.log(response.data.message);\n        toast.error(`${response.data.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [search]);\n\n  const onSearchMovies = search => {\n    setSearchParams({ search });\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && <h1>error</h1>}\n      <MovieSearchForm onSubmit={onSearchMovies} />\n      {movies && <MovieSearchList movies={movies} />}\n      <ToastContainer />\n    </>\n  );\n};\n\nexport default MovieSearch;\n","import MovieSearch from '../../components/MovieSearch/MovieSearch';\n\nconst MoviesPage = () => {\n  return (\n    <>\n      <MovieSearch />\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["instance","axios","baseURL","params","api_key","searchMovies","query","get","data","results","getAllMovies","page","getMovieById","movieId","getCasts","cast","getReviews","onSubmit","useState","search","setSearch","className","css","event","preventDefault","name","value","required","placeholder","onChange","target","type","movies","location","useLocation","elements","map","title","id","state","from","to","setMovies","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","useEffect","fetchMovies","response","message","console","log","toast","Loader"],"sourceRoot":""}