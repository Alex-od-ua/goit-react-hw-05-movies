{"version":3,"file":"static/js/883.51524e87.chunk.js","mappings":"sSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BAETC,OAAQ,CACNC,QAAS,sCAIAC,EAAY,mCAAG,WAAMC,GAAN,yFACHN,EAASO,IAAI,iBAAkB,CACpDJ,OAAQ,CACNG,MAAAA,KAHsB,uBAClBE,EADkB,EAClBA,KADkB,kBAOnBA,EAAKC,SAPc,2CAAH,sDAUZC,EAAY,mCAAG,2GAAOC,EAAP,+BAAc,EAAd,SACHX,EAASO,IAAI,qBAAsB,CACxDJ,OAAQ,CACNQ,KAAAA,KAHsB,uBAClBH,EADkB,EAClBA,KADkB,kBAMnBA,EAAKC,SANc,2CAAH,qDASZG,EAAY,mCAAG,WAAMC,GAAN,yFACHb,EAASO,IAAT,iBAAuBM,EAAvB,MADG,uBAClBL,EADkB,EAClBA,KADkB,kBAGnBA,GAHmB,2CAAH,sDAMZM,EAAQ,mCAAG,WAAMD,GAAN,yFACCb,EAASO,IAAT,iBAAuBM,EAAvB,cADD,uBACdL,EADc,EACdA,KADc,kBAEfA,EAAKO,MAFU,2CAAH,sDAKRC,EAAU,mCAAG,WAAMH,GAAN,yFACDb,EAASO,IAAT,iBAAuBM,EAAvB,eADC,uBAChBL,EADgB,EAChBA,KADgB,kBAEjBA,EAAKC,SAFY,2CAAH,qD,uJCvCvB,EAAuB,6BAAvB,EAA2D,6BAA3D,EAA+F,6BAA/F,EAAqI,+B,SC+BrI,EA1B2B,SAAC,GAAgB,IAAdQ,EAAa,EAAbA,OACtBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAWH,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OAC1B,SAAC,KAAD,CAEEC,UAAWC,EACXC,GAAE,kBAAaL,GACfM,MAAO,CAAEC,KAAMX,GAJjB,UAME,eAAIO,UAAWC,EAAf,SAA0BH,GAAgBC,KALrCF,EAFmB,IAW5B,OAAO,eAAIG,UAAWC,EAAf,SAA0BN,GAClC,E,kBCyBD,EAnCuB,WACrB,OAA4BU,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAec,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,sGAKhBJ,GAAW,GALK,UAMMvB,EAAAA,EAAAA,MANN,OAMVD,EANU,OAOhBsB,EAAUtB,GAPM,gDAQP6B,EARO,KAQPA,SACTH,EAASG,EAAS9B,KAAK+B,SACvBC,EAAAA,EAAAA,IAAM,GAAD,OAAIF,EAAS9B,KAAK+B,SAVP,yBAYhBN,GAAW,GAZK,4EAAH,qDAejBI,GACD,GAAE,CAACN,KAGF,4BACE,eAAIN,UAAWC,EAAf,4BACCQ,IAAS,cAAGT,UAAU,GAAb,SAAiBS,IAC1BF,IAAW,SAACS,EAAA,EAAD,IACXxB,IAAU,SAAC,EAAD,CAAoBA,OAAQA,IACtCiB,IAAS,SAAC,KAAD,MAGf,ECjCD,EATiB,WACf,OACE,+BAEE,SAAC,EAAD,KAGL,C","sources":["components/services/api.js","webpack://react-homework-template/./src/components/TrendingMovies/TrendingMovies.module.css?c983","components/TrendingMovies/TrendingMoviesList/TrendingMoviesList.jsx","components/TrendingMovies/TrendingMovies.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n\n  params: {\n    api_key: '5bbf892bcd99762773ec3ce2eced7cd4',\n  },\n});\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get('/search/movie?', {\n    params: {\n      query,\n    },\n  });\n\n  return data.results;\n};\n\nexport const getAllMovies = async (page = 1) => {\n  const { data } = await instance.get('/trending/all/day?', {\n    params: {\n      page,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}?`);\n\n  return data;\n};\n\nexport const getCasts = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/credits?`);\n  return data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}//reviews?`);\n  return data.results;\n};\n\n// api key: 5bbf892bcd99762773ec3ce2eced7cd4\n\n//https://api.themoviedb.org/3/movie/550?api_key=5bbf892bcd99762773ec3ce2eced7cd4\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TrendingMovies_list__RbZcl\",\"item\":\"TrendingMovies_item__oTryW\",\"link\":\"TrendingMovies_link__Kn992\",\"header\":\"TrendingMovies_header__RkR5o\"};","import PropTypes from 'prop-types';\n\nimport { Link, useLocation } from 'react-router-dom';\n\nimport css from '../TrendingMovies.module.css';\n\nconst TrendingMoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  const elements = movies.map(({ id, title, name }) => (\n    <Link\n      key={id}\n      className={css.link}\n      to={`/movies/${id}`}\n      state={{ from: location }}\n    >\n      <li className={css.item}>{title ? title : name}</li>\n    </Link>\n  ));\n\n  return <ul className={css.list}>{elements}</ul>;\n};\n\nTrendingMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string,\n    })\n  ),\n};\n\nexport default TrendingMoviesList;\n","import { useState, useEffect } from 'react';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport TrendingMoviesList from './TrendingMoviesList/TrendingMoviesList';\nimport { getAllMovies } from 'components/services/api';\nimport Loader from '../Loader/Loader';\n\nimport css from '../TrendingMovies/TrendingMovies.module.css';\n\nconst TrendingMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      // if (movies.length !== 0) {\n      //   return;\n      // }\n      try {\n        setLoading(true);\n        const results = await getAllMovies();\n        setMovies(results);\n      } catch ({ response }) {\n        setError(response.data.mesage);\n        toast(`${response.data.mesage}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [setMovies]);\n\n  return (\n    <div>\n      <h1 className={css.header}>Trending today</h1>\n      {error && <p className=\"\">{error}</p>}\n      {loading && <Loader />}\n      {movies && <TrendingMoviesList movies={movies} />}\n      {error && <ToastContainer />}\n    </div>\n  );\n};\n\nexport default TrendingMovies;\n","import TrendingMovies from '../../components/TrendingMovies/TrendingMovies';\n\nconst HomePage = () => {\n  return (\n    <>\n      {/* <h1>Trending today</h1> */}\n      <TrendingMovies />\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["instance","axios","baseURL","params","api_key","searchMovies","query","get","data","results","getAllMovies","page","getMovieById","movieId","getCasts","cast","getReviews","movies","location","useLocation","elements","map","id","title","name","className","css","to","state","from","useState","setMovies","loading","setLoading","error","setError","useEffect","fetchMovies","response","mesage","toast","Loader"],"sourceRoot":""}